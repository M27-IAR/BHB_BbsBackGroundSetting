// 核心变量
var k = 0, c = "", name = "", key = "";
let autoScroll = true;
let userScrolling = false; // 添加用户滚动标记
var messageIds = new Set();
// 添加 AI 相关常量
const AI_NAME = 'AI助手';
const AI_AVATAR = './plugin/msto_chat/assets/ai.png';

// 添加分页相关变量
let currentPage = 1;
let isLoading = false;
let hasMore = true;
const perPage = 10;
let lastMsgId = null; // 添加最后一条消息ID的记录

// 在文件开头添加 LetterAvatar 函数
function LetterAvatar(name, size) {
    const colors = [
        "#1abc9c", "#2ecc71", "#3498db", "#9b59b6", "#34495e", "#16a085",
        "#27ae60", "#2980b9", "#8e44ad", "#2c3e50", "#f1c40f", "#e67e22",
        "#e74c3c", "#95a5a6", "#f39c12", "#d35400", "#c0392b", "#bdc3c7"
    ];
    
    const nameSplit = name.split(" ");
    const initials = nameSplit.length > 1 ? 
        nameSplit[0].charAt(0) + nameSplit[1].charAt(0) : 
        name.charAt(0);
    
    const charIndex = initials.charCodeAt(0) - 65;
    const colorIndex = Math.abs(charIndex) % colors.length;
    
    // 为系统消息返回特���图标
    if(name === 'System') {
        return `data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="${size}" height="${size}" viewBox="0 0 24 24" fill="%23666"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z"/></svg>`;
    }
    
    // 生成带有初始字母的头像
    const canvas = document.createElement('canvas');
    const context = canvas.getContext('2d');
    canvas.width = size;
    canvas.height = size;
    
    // 绘制背景
    context.fillStyle = colors[colorIndex];
    context.fillRect(0, 0, canvas.width, canvas.height);
    
    // 绘制文字
    context.font = Math.floor(size/2) + 'px Arial';
    context.fillStyle = '#ffffff';
    context.textAlign = 'center';
    context.textBaseline = 'middle';
    context.fillText(initials.toUpperCase(), size/2, size/2);
    
    return canvas.toDataURL();
}

// 在文件开头添加工具栏切换相关代码
$(document).ready(function() {
    // 工具栏切换功能
    $('.toggle-toolbar').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        const $toolbar = $('.chat-toolbar');
        
        // 切换显示状态并添加动画
        if($toolbar.is(':visible')) {
            $toolbar.css({
                'max-height': '0',
                'opacity': '0',
                'padding': '0 10px'
            });
            setTimeout(() => {
                $toolbar.hide();
            }, 300);
        } else {
            $toolbar.show().css({
                'display': 'flex',
                'max-height': '46px',
                'opacity': '1',
                'padding': '8px 10px'
            });
        }
        
        localStorage.setItem('toolbarVisible', $toolbar.is(':visible'));
    });

    // 从 localStorage 恢复工具栏状态
    if(localStorage.getItem('toolbarVisible') === 'true') {
        const $toolbar = $('.chat-toolbar');
        $toolbar.show().css({
            'display': 'flex',
            'max-height': '46px',
            'opacity': '1',
            'padding': '8px 10px'
        });
    }

    // 阻止工具栏的点击事件冒泡
    $('.chat-toolbar').on('click', function(e) {
        e.stopPropagation();
    });

    // 修改发送消息的触发方式
    $("#msg").on("keypress", function(e) {
        if (e.keyCode === 13 && !e.shiftKey) {
            e.preventDefault();
            send();
        }
    });
});

// 图片上传按钮点击事件
$('.chat-toolbar .image-btn').on('click', function() {
    $('.chat-toolbar #imageUpload').click();
});

// 图片文件选择事件
$('.chat-toolbar #imageUpload').on('change', function(e) {
    const file = e.target.files[0];
    if(!file) return;
    
    console.log('Selected file:', file);
    
    // 检查文件类型
    if(!file.type.match(/^image\/(jpeg|png|gif|avif|webp)$/)) {
        alert('只支持 jpg、png、gif、avif、webp 格式的图片');
        return;
    }
    
    // 检查文件大小（限制为5MB）
    if(file.size > 5 * 1024 * 1024) {
        alert('图片大小不能超过5MB');
        return;
    }
    
    const formData = new FormData();
    formData.append('image', file);
    
    // 显示上传进度
    const progressHtml = `
        <div class="upload-progress" style="
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 20px;
            border-radius: 5px;
            z-index: 1000;
        ">
            <div>正在上传图片...</div>
            <div class="progress-text">0%</div>
        </div>
    `;
    $('body').append(progressHtml);
    
    console.log('Starting upload...');
    $.ajax({
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=upload",
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        xhr: function() {
            const xhr = new XMLHttpRequest();
            xhr.upload.addEventListener("progress", function(e) {
                if(e.lengthComputable) {
                    const percent = Math.round((e.loaded / e.total) * 100);
                    $('.progress-text').text(percent + '%');
                    console.log('Upload progress:', percent + '%');
                }
            });
            return xhr;
        },
        success: function(response) {
            $('.upload-progress').remove();
            console.log('Upload response:', response);
            
            if(response.error) {
                alert(response.error);
                return;
            }
            if(response.url) {
                console.log('Image URL:', response.url);
                const imgMsg = `<img src="${response.url}" style="max-width:200px; max-height:200px; border-radius:5px; box-shadow:0 2px 5px rgba(0,0,0,0.2);" />`;
                console.log('Image message:', imgMsg);
                $("#msg").val(imgMsg);
                send();
            }
        },
        error: function(xhr, status, error) {
            $('.upload-progress').remove();
            console.error('Upload failed:', error);
            console.error('Response:', xhr.responseText);
            alert('图片上传失败，请重试');
        }
    });
    
    // 清空文件选择，允许上传文件
    $(this).val('');
});

// 添加按钮hover效果
$('.chat-toolbar .toolbar-btn').hover(
    function() {
        $(this).css({
            'background': 'var(--bs-primary, #0d6efd)',
            'box-shadow': '0 2px 5px rgba(0,0,0,0.15)',
            'border-color': 'var(--bs-primary, #0d6efd)',
            'color': 'var(--bs-white, #fff)'
        });
    },
    function() {
        $(this).css({
            'background': 'var(--bs-body-bg, #fff)',
            'box-shadow': '0 1px 3px rgba(0,0,0,0.1)',
            'border-color': 'var(--bs-border-color, #ddd)',
            'color': 'var(--bs-body-color, #333)'
        });
    }
);

// 发送消息
function send() {
    if ($("#msg").val().length < 1) return false;
    
    let msgContent = $("#msg").val();
    // 处理B站链接
    msgContent = parseBilibiliUrl(msgContent);
    let isAIMessage = msgContent.match(/^@AI助手\s+/i);
    
    // 清空输入框
    $("#msg").val("");
    
    // 如果是AI对话，先禁用输入框
    if (isAIMessage) {
        $("#msg").prop('disabled', true)
                .attr('placeholder', 'AI助手正在思��中...');
        showAITyping();
    }
    
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=send",
        data: { msg: msgContent },
        dataType: 'json',
        success: function(response) {
            if(response.error) {
                alert(response.error);
                // 如果发生错误，恢复输入框状态
                if (isAIMessage) {
                    $("#msg").prop('disabled', false)
                            .attr('placeholder', '请输入消息...');
                    removeAITyping();
                }
                // 如果发生错误，恢复消息内容
                $("#msg").val(msgContent);
                return;
            }
            
            // 发送成功后重置滚动状态
            autoScroll = true;
            userScrolling = false;
            currentPage = 1;
            get_msg();
            
            // 如果不是AI对话，保持输入框焦点
            if (!isAIMessage) {
                $("#msg").focus();
            }
        },
        error: function(xhr, status, error) {
            console.error('发送失败:', error);
            alert('发送失败，请重试');
            // 发送失败时恢复输入框状态和消息内��
            if (isAIMessage) {
                $("#msg").prop('disabled', false)
                        .attr('placeholder', '请输入消息...');
                removeAITyping();
            }
            $("#msg").val(msgContent);
        }
    });
    return false;
}

// 自动滚动功能
function sockll() {
    if(autoScroll && !userScrolling) {
        $(".chat-history-body").scrollTop($(".chat-history-body")[0].scrollHeight);
    }
}

// 修改滚动事件处理
$(".chat-history-body").on('scroll', function() {
    const element = $(this)[0];
    const atBottom = element.scrollHeight - element.scrollTop <= element.clientHeight + 100;
    
    // 只有当用户主动滚动时才更新autoScroll
    if(userScrolling) {
        autoScroll = atBottom;
    }
});

// 修改 get_msg 函数
function get_msg() {
    if (!document.hidden && !isLoading) {
        const baseUrl = document.querySelector('.mk-chat-box').getAttribute('data-base-href');
        const url = `${baseUrl}app/ajax.php?c=msg&page=${currentPage}&per_page=${perPage}`;
        
        isLoading = true;
        
        $.getJSON(url).done(function(response) {
            if(!response || !response.list || response.list.length === 0) {
                isLoading = false;
                return;
            }
            
            hasMore = response.hasMore;
            const currentMessageIds = new Set();
            let hasNewAIResponse = false;
            let hasNewMessages = false;
            
            // 如果是第一页，清空现有消息
            if(currentPage === 1) {
                $('.mk-chat-box').empty();
                messageIds.clear();
            }
            
            // 如果是加载更多历史消息，记录当前滚动位置
            const scrollPos = currentPage > 1 ? $(".chat-history-body").scrollTop() : 0;
            
            // 处理消息列表
            response.list.forEach(function(msgStr) {
                try {
                    const msg = JSON.parse(msgStr);
                    currentMessageIds.add(msg.id);
                    
                    // 检查是否是新消息
                    if (currentPage === 1 && lastMsgId && msg.id > lastMsgId) {
                        hasNewMessages = true;
                        
                        // 只有新消息且包含@时才播放提示音
                        if (msg.msg.includes('@' + name) && 
                            msg.name !== name && 
                            !msg.msg.includes('<img') && 
                            !msg.msg.includes('<audio') &&
                            !messageIds.has(msg.id)) {
                            playSound();
                        }
                    }
                    
                    if(!messageIds.has(msg.id)) {
                        messageIds.add(msg.id);
                        
                        if(msg.type === 'ai') {
                            hasNewAIResponse = true;
                        }
                        
                        const messageClass = (msg.key === key || msg.name === name) ? "right chat-message-right" : "left";
                        const avatar = msg.pic || LetterAvatar(msg.name, 32);
                        
                        // 根据页码决定添加位置
                        if(currentPage > 1) {
                            prependMessage(msg.name, msg, messageClass, avatar);
                        } else {
                            addmsg(msg.name, msg, messageClass, avatar);
                        }
                    }
                } catch(e) {
                    console.error('消息解析失败:', e, msgStr);
                }
            });
            
            // 更新最后消息ID
            if (response.list.length > 0) {
                try {
                    const lastMsg = JSON.parse(response.list[response.list.length - 1]);
                    lastMsgId = lastMsg.id;
                } catch(e) {
                    console.error('解析最后消息ID失败:', e);
                }
            }
            
            // 恢复输入框状态
            if(hasNewAIResponse || hasNewMessages) {
                $("#msg").prop('disabled', false)
                        .attr('placeholder', '请输入消息...')
                        .focus();
                removeAITyping();
            }
            
            // 更新加载更多按钮
            updateLoadMoreButton();
            
            // 更新滚动位置
            if(currentPage > 1) {
                // 加载历史消息时，保持在原位置
                userScrolling = true;
                $(".chat-history-body").scrollTop(scrollPos);
                setTimeout(() => {
                    userScrolling = false;
                }, 100);
            } else if(hasNewMessages) {
                // 新消息时滚动到底部
                autoScroll = true;
                userScrolling = false;
                sockll();
            }
            
            isLoading = false;
        });
    }
}

// 修改消息添加函数
function addmsg(name, content, messageClass, avatar) {
    const messageHtml = createMessageHtml(name, content, messageClass, avatar, content.id);
    $(".mk-chat-box").append(messageHtml);
}

// 修改向顶部添加消息的函数
function prependMessage(name, content, messageClass, avatar) {
    const messageHtml = createMessageHtml(name, content, messageClass, avatar, content.id);
    $(".mk-chat-box").prepend(messageHtml);
}

// 修改消息HTML创建函数
function createMessageHtml(name, content, messageClass, avatar, index) {
    const profileUrl = '#';
    const recallButton = (name === window.name || window.isAdmin) ? 
        `<button class="recall-btn" data-message-id="${content.id}" style="
            font-size: 12px;
            padding: 2px 8px;
            border: none;
            background: none;
            color: #666;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.2s;
            margin-left: 8px;
        ">撤回</button>` : '';

    return `
        <li class="chat-message ${messageClass}" data-index="${content.id}">
            <div class="d-flex overflow-hidden">
                <div class="user-avatar flex-shrink-0 me-4">
                    <div class="avatar avatar-sm">
                        <a href="javascript:void(0)" onclick="window.open('${profileUrl}','_blank')">
                            <img src="${avatar}" alt="Avatar" class="rounded-circle">
                        </a>
                    </div>
                </div>
                <div class="chat-message-wrapper flex-grow-1">
                    <div class="text-muted mb-1 d-flex justify-content-between align-items-center">
                        <small title="右键点击管理" style="cursor:pointer" onclick="document.getElementById('msg').value = document.getElementById('msg').value + '@' + this.textContent + '  '">${name}</small>
                        ${recallButton}
                    </div>
                    <div class="chat-message-text">
                        <div class="mb-0">${content.msg}</div>
                    </div>
                </div>
            </div>
        </li>
    `;
}

// 修改加载更多按钮的处理
function updateLoadMoreButton() {
    // 移除现有的加载更多按钮
    $('.load-more-btn').remove();
    
    if(hasMore) {
        const loadMoreBtn = `
            <div class="load-more-btn" style="
                text-align: center;
                padding: 5px 10px;
                margin: 5px auto;
                background: var(--bs-primary-soft, #e7f1ff);
                color: var(--bs-primary);
                border-radius: 4px;
                cursor: pointer;
                font-size: 12px;
                transition: all 0.2s;
                width: fit-content;
                border: 1px solid var(--bs-primary-border-subtle, #9ec5fe);
            ">
                <i class="la la-angle-up" style="margin-right: 4px;"></i>加载更多
            </div>
        `;
        $('.mk-chat-box').prepend(loadMoreBtn);
    }
}

// 修改加载更多按钮的点击事件
$(document).on('click', '.load-more-btn', function() {
    if(!isLoading && hasMore) {
        userScrolling = true; // 标记用户操作
        $(this).html('<i class="la la-spinner la-spin"></i> 加载中...')
               .css('opacity', '0.7')
               .css('pointer-events', 'none');
        currentPage++;
        get_msg();
    }
});

// 添加向顶部添加消息的函数
function prependMessage(name, content, messageClass, avatar) {
    const messageHtml = createMessageHtml(name, content, messageClass, avatar, content.id);
    $(".mk-chat-box").prepend(messageHtml);
}

// 添加延迟加载UI组件的函数
function loadDeferredUI() {
    // 延迟加载表包相关
    loadEmojis();
    // 延迟加载工具栏
    loadToolbar();
}

// 修改初始化函数
$(document).ready(function() {
    if(c) clearInterval(c);
    
    // 重置分页相关变量
    currentPage = 1;
    isLoading = false;
    hasMore = true;
    
    // 先执行登录，在登录成功后立即获取消息
    if ($('.login').length == 0) {
        login();
    }
    
    $("#msg").on("keypress", function(a) {
        if (13 == a.keyCode) return send(), false;
    });
});

// 修改登录函数，确保获取消息
function login(n) {
    $.get(document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=login", { 'n': n })
        .done(function(response) {
            if(typeof response === 'string') {
                response = JSON.parse(response);
            }
            name = response.name;
            key = response.key;
            window.isAdmin = Boolean(response.isAdmin);
            
            // 立即获取一次消息
            get_msg();
            
            // 后开始定时获取
            if(!c) {
                c = setInterval(get_msg, 2000);
            }
            
            // 添加面可见性检测
            document.addEventListener('visibilitychange', function() {
                if (!document.hidden) {
                    get_msg();
                }
            });
            
            // 延迟载其他UI组件
            setTimeout(loadDeferredUI, 1000);
            
            // 添加刷新检查(更频繁检查)
            setInterval(checkForceRefresh, 5000); // 每5秒检查一次
        });
}

// 分离UI加载函数
function loadEmojis() {
    // 延迟加载表情包数和UI
    setTimeout(() => {
        // 原来的表情包初始化代码
        const emojis = {
            '😀': '开心', '😃': '大笑'
            // ... 其他情
        };
        // ... 表情包相关代码
    }, 1000);
}

function loadToolbar() {
    // 延迟加载工具栏
    setTimeout(() => {
        // 原来的工具栏初始化代码
        $('.chat-toolbar').show();
    }, 1500);
}

// 修改右键菜单HTML
$('body').find('.custom-menu').remove();
$('body').append(`
    <div class="custom-menu" style="
        display: none;
        position: absolute;
        background: var(--bs-body-bg, #fff);
        border: 1px solid var(--bs-border-color, #ddd);
        border-radius: 4px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        z-index: 1000;
        min-width: 120px;
    ">
        <div class="menu-item mute">禁言</div>
        <div class="menu-item unmute">解除禁言</div>
        <div class="menu-item points">积分操作</div>
        <div class="menu-item kick">踢出(禁用)</div>
        <div class="menu-item unkick">解除踢出</div>
        <div class="menu-item clear-messages">清除消息</div>
        <div class="menu-item force-refresh">强制刷新(禁用)</div>
    </div>
`);

// 修改清除消息菜单项处理
$(document).on('click', '.menu-item.clear-messages', function() {
    const options = [
        '清除最新20条消息',
        '清除最新50条消息',
        '清除所有消息'
    ];
    
    const choice = prompt(`请选择清除选项：\n${options.map((opt, idx) => `${idx + 1}. ${opt}`).join('\n')}\n\n请输入选项编号：`);
    
    if(!choice) return;
    
    let count;
    switch(choice) {
        case '1':
            count = 20;
            break;
        case '2':
            count = 50;
            break;
        case '3':
            count = null;
            break;
        default:
            alert('无效的选项');
            return;
    }
    
    if(!confirm(`确定要${options[choice - 1]}吗？`)) return;
    
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=clear",
        data: { count: count },
        dataType: 'json',
        success: function(response) {
            if(response.error) {
                alert(response.error);
            } else {
                alert('清除成功');
                // 刷新消息列表
                get_msg();
            }
        },
        error: function(xhr, status, error) {
            console.error('Clear messages failed:', error);
            alert('操作失败，请重试');
        }
    });
});

// 修改强制刷新功能
function checkForceRefresh() {
    $.ajax({
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=check_refresh",
        dataType: 'json',
        success: function(response) {
            // 只有当收到新的token且不是初始化时才刷新
            if(response.token && window.lastRefreshToken && response.token !== window.lastRefreshToken) {
                window.lastRefreshToken = response.token;
                // 显示通知并直接刷新
                const message = document.createElement('div');
                message.style.cssText = `
                    position: fixed;
                    top: 20px;
                    left: 50%;
                    transform: translateX(-50%);
                    background: rgba(0,0,0,0.8);
                    color: white;
                    padding: 10px 20px;
                    border-radius: 4px;
                    z-index: 9999;
                `;
                message.textContent = '管理员要求刷新页面，页面即将刷新...';
                document.body.appendChild(message);
                
                // 1秒后刷新
                setTimeout(function() {
                    window.location.href = '/chat.htm';
                }, 1000);
            } else if(!window.lastRefreshToken) {
                // 初始化token
                window.lastRefreshToken = response.token;
            }
        }
    });
}

// 修改强制刷新按钮处理
$(document).on('click', '.menu-item.force-refresh', function() {
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=force_refresh",
        dataType: 'json',
        success: function(response) {
            if(response.error) {
                alert(response.error);
            } else {
                // 显示通知
                const message = document.createElement('div');
                message.style.cssText = `
                    position: fixed;
                    top: 20px;
                    left: 50%;
                    transform: translateX(-50%);
                    background: rgba(0,0,0,0.8);
                    color: white;
                    padding: 10px 20px;
                    border-radius: 4px;
                    z-index: 9999;
                `;
                message.textContent = '已发送强制刷新命令';
                document.body.appendChild(message);
                
                // 2秒后移除通知
                setTimeout(() => message.remove(), 2000);
            }
        }
    });
});

// 添加右菜单的件处理
$(document).on('contextmenu', '.chat-message .text-muted small', function(e) {
    console.log('Right click detected, isAdmin:', window.isAdmin);
    if(!window.isAdmin) {
        return true;
    }
    
    e.preventDefault();
    const username = $(this).text().trim();
    console.log('Selected username:', username);
    
    if(username === name) {
        alert('不能对自己执行此操作');
        return;
    }
    
    $('.custom-menu')
        .show()
        .css({
            top: e.pageY + 'px',
            left: e.pageX + 'px'
        })
        .data('username', username);
    
    console.log('Menu shown for user:', username);
});

// 点击其他地方关闭菜单
$(document).click(function() {
    $('.custom-menu').hide();
});

// 处理菜单项点击
$(document).on('click', '.custom-menu .menu-item', function(e) {
    e.preventDefault();
    e.stopPropagation();
    
    const action = $(this).attr('class').split(' ')[1];
    const username = $('.custom-menu').data('username');
    
    console.log('Menu action:', action, 'for user:', username);
    
    if(!username) {
        console.error('No username found');
        return;
    }
    
    switch(action) {
        case 'mute':
            if(confirm(`确定要禁言用户 ${username} 吗？`)) {
                muteUser(username);
            }
            break;
        case 'unmute':
            if(confirm(`确定要解除用户 ${username} 禁言吗？`)) {
                unmuteUser(username);
            }
            break;
        case 'points':
            operatePoints(username);
            break;
        case 'kick':
            if(confirm(`确定要踢出用户 ${username} 吗？`)) {
                kickUser(username);
            }
            break;
        case 'unkick':
            if(confirm(`确定要解除用户 ${username} 的踢出状态吗？`)) {
                unkickUser(username);
            }
            break;
    }
    
    $('.custom-menu').hide();
});

// 添加菜单项的 hover 效果
$(document).on('mouseenter', '.custom-menu .menu-item', function() {
    $(this).css({
        'background-color': 'var(--bs-primary, #0d6efd)',
        'color': 'var(--bs-white, #fff)'
    });
}).on('mouseleave', '.custom-menu .menu-item', function() {
    $(this).css({
        'background-color': 'var(--bs-body-bg, #fff)',
        'color': 'var(--bs-body-color, #333)'
    });
});

// 管理功能
function muteUser(username) {
    console.log('Muting user:', username);
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=mute",
        data: { username: username },
        dataType: 'json',
        success: function(response) {
            console.log('Mute response:', response);
            if(response.error) {
                alert(response.error);
            } else {
                alert(response.message);
            }
        },
        error: function(xhr, status, error) {
            console.error('Mute failed:', error);
            alert('操作失败，请重试');
        }
    });
}

function unmuteUser(username) {
    console.log('Unmuting user:', username);
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=unmute",
        data: { username: username },
        dataType: 'json',
        success: function(response) {
            console.log('Unmute response:', response);
            if(response.error) {
                alert(response.error);
            } else {
                alert(response.message);
            }
        },
        error: function(xhr, status, error) {
            console.error('Unmute failed:', error);
            alert('操作失败，请重试');
        }
    });
}

function kickUser(username) {
    console.log('Kicking user:', username);
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=kick",
        data: { username: username },
        dataType: 'json',
        success: function(response) {
            console.log('Kick response:', response);
            if(response.error) {
                alert(response.error);
            } else {
                alert(response.message);
                if(username === name) {
                    window.location.reload();
                }
            }
        },
        error: function(xhr, status, error) {
            console.error('Kick failed:', error);
            alert('操作失败，请重试');
        }
    });
}

// 修改游戏相关函数
function rollDice() {
    // 查否有未成的游戏
    if($('.game-status-box').is(':visible')) {
        alert('请等待当前游戏结束');
        return;
    }
    
    const points = prompt('请输入下注积分(1-1000000):', '100');
    if(points === null) return;
    
    const betPoints = parseInt(points);
    if(isNaN(betPoints) || betPoints < 1 || betPoints > 1000000) {
        alert('请输入1-1000000之间的有效积分');
        return;
    }
    
    // 直接发送游戏请求，不二次确认
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=game",
        data: { 
            type: 'dice',
            points: betPoints
        },
        dataType: 'json',
        success: function(response) {
            if(response.error) {
                alert(response.error);
            }
        },
        error: function(xhr, status, error) {
            console.error('Game action failed:', error);
            alert('游戏操作失败，请重试');
        }
    });
}

// 修改子按钮点击事件
$('.chat-toolbar .dice-btn').on('click', function() {
    rollDice();
});

// 游戏按钮添加hover效果
$('.chat-toolbar .toolbar-btn').hover(
    function() {
        $(this).css({
            'background': 'var(--bs-primary, #0d6efd)',
            'box-shadow': '0 2px 5px rgba(0,0,0,0.15)',
            'border-color': 'var(--bs-primary, #0d6efd)',
            'color': 'var(--bs-white, #fff)'
        });
    },
    function() {
        $(this).css({
            'background': 'var(--bs-body-bg, #fff)',
            'box-shadow': '0 1px 3px rgba(0,0,0,0.1)',
            'border-color': 'var(--bs-border-color, #ddd)',
            'color': 'var(--bs-body-color, #333)'
        });
    }
);

// 在文件末尾添加积分操作函数
function operatePoints(username) {
    if(!window.isAdmin) {
        alert('只有管理员才能操作积分');
        return;
    }
    
    // 弹出输入框让管理员输入积分数量
    const points = prompt('请输入要操作的积分数量\n(正数为增加，负数为减少):', '100');
    if(points === null) return;
    
    const pointsNum = parseInt(points);
    if(isNaN(pointsNum) || pointsNum === 0) {
        alert('请输入有效的积分数值');
        return;
    }
    
    // 输入操作原因
    const reason = prompt('请输入操作原因(可选):');
    if(reason === null) return;
    
    // 确认操作
    const operation = pointsNum > 0 ? '增加' : '减少';
    const points_abs = Math.abs(pointsNum);
    if(!confirm(`确认为用户 ${username} ${operation} ${points_abs} 积分吗？`)) {
        return;
    }
    
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=points",
        data: {
            username: username,
            points: pointsNum,
            reason: reason
        },
        dataType: 'json',
        success: function(response) {
            if(response.error) {
                alert(response.error);
            } else {
                alert('积分操作成功');
            }
        },
        error: function(xhr, status, error) {
            console.error('Points operation failed:', error);
            alert('操作失败，请重试');
        }
    });
}

// 修改快手按钮相关代码
$(document).ready(function() {
    // 快手按钮击件
    $('.kuaishou-btn').on('click', function() {
        $('.kuaishou-popup').fadeToggle();
    });

    // 关闭按钮点击事件 - 使用更直接的方式
    $(document).on('click', '.kuaishou-close', function(e) {
        e.preventDefault();
        e.stopPropagation();
        $('.kuaishou-popup').fadeOut();
        console.log('Close button clicked'); // 添加调试日志
    });

    // 阻止快手iframe内的点击事件冒泡
    $('.kuaishou-popup iframe').on('click', function(e) {
        e.stopPropagation();
    });
});

// 添加输入框状态恢复函数
function resetMessageInput() {
    $("#msg").prop('disabled', false)
                .attr('placeholder', '请输入消息...')
                .focus();
}

// 修改消息获取函数，在收到AI回复后恢复输入框状态
function getMessages() {
    $.ajax({
        url: "./plugin/msto_chat/route/app/ajax.php?c=msg&k=" + k,
        type: "GET",
        dataType: "json",
        success: function(response) {
            if (response.error) {
                console.log(response.error);
                return;
            }
            
            if (response.list && response.list.length > 0) {
                response.list.forEach(function(msgStr) {
                    var msg = JSON.parse(msgStr);
                    if (msg.type === 'ai') {
                        // 收到AI回复后恢复输入框状态
                        resetMessageInput();
                    }
                    // ... 其他消息理逻辑 ...
                });
            }
            
            k = response.count;
        }
    });
}

// 添加视觉反馈
function showAITyping() {
    removeAITyping(); // 先移除可能存在的提示
    var typingHtml = `
        <div class="chat-message left ai-typing">
            <div class="d-flex overflow-hidden">
                <div class="user-avatar flex-shrink-0 me-4">
                    <div class="avatar avatar-sm">
                        <img src="${AI_AVATAR}" alt="AI" class="rounded-circle" onerror="this.src='./plugin/msto_chat/assets/system.png'">
                    </div>
                </div>
                <div class="chat-message-wrapper flex-grow-1">
                    <div class="typing-indicator">
                        <span></span><span></span><span></span>
                    </div>
                </div>
            </div>
        </div>`;
    
    $(".mk-chat-box").append(typingHtml);
    sockll();
}

function removeAITyping() {
    $(".ai-typing").remove();
}

// 在发送AI消息时显示输入状态
if (message.match(/^@AI助手\s+/i)) {
    showAITyping();
}

// 在收到AI回复时移除输入状态
if (msg.type === 'ai') {
    removeAITyping();
    resetMessageInput();
}

// 添加相关 CSS
const styleSheet = document.createElement("style");
styleSheet.textContent = `
    .typing-indicator {
        padding: 10px;
        display: flex;
        gap: 4px;
    }

    .typing-indicator span {
        width: 8px;
        height: 8px;
        background: #90949c;
        border-radius: 50%;
        animation: typing 1s infinite ease-in-out;
    }

    .typing-indicator span:nth-child(1) { animation-delay: 0.2s; }
    .typing-indicator span:nth-child(2) { animation-delay: 0.4s; }
    .typing-indicator span:nth-child(3) { animation-delay: 0.6s; }

    @keyframes typing {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.5); }
    }

    .ai-typing {
        opacity: 0.7;
    }
`;
document.head.appendChild(styleSheet);

// 添加B站视频解析函数
function parseBilibiliUrl(message) {
    // 匹配B站视频URL的正则表达式（支持BV号和av号）
    const biliRegex = /https?:\/\/(www\.)?(bilibili\.com\/video\/(?:BV[\w]+|av\d+))[^\s]*/i;
    const match = message.match(biliRegex);
    
    if (match) {
        const videoUrl = match[0];
        const bvMatch = videoUrl.match(/\/(BV[\w]+)/);
        const avMatch = videoUrl.match(/\/(av\d+)/);
        const videoId = bvMatch ? bvMatch[1] : (avMatch ? avMatch[1] : null);
        
        if (videoId) {
            // 创建B站播放器iframe
            return `
                <div class="video-container" style="
                    max-width: 100%;
                    width: 300px;
                    margin: 10px 0;
                    border-radius: 8px;
                    overflow: hidden;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                    background: #000;
                ">
                    <iframe src="//player.bilibili.com/player.html?bvid=${videoId}&page=1&high_quality=1&danmaku=0&autoplay=0" 
                        scrolling="no" 
                        border="0" 
                        frameborder="no" 
                        framespacing="0" 
                        allowfullscreen="true"
                        style="width:100%;height:200px;"
                        sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"
                    ></iframe>
                </div>
            `;
        }
    }
    
    return message;
}

// 添加撤回按钮的事件处理
$(document).ready(function() {
    // 示/隐藏撤回按钮
    $(document).on('mouseenter', '.chat-message', function() {
        $(this).find('.recall-btn').css('opacity', '1');
    }).on('mouseleave', '.chat-message', function() {
        $(this).find('.recall-btn').css('opacity', '0');
    });
    
    // 撤回按钮点击事件
    $(document).on('click', '.recall-btn', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const messageId = $(this).data('message-id');
        if(!messageId) {
            console.error('No message ID found');
            return;
        }
        
        if(!confirm('确定要撤回这条消息吗？')) return;
        
        const baseUrl = document.querySelector('.mk-chat-box').getAttribute('data-base-href');
        
        $.ajax({
            type: 'POST',
            url: baseUrl + "app/ajax.php?c=recall",
            data: { messageId: messageId },
            dataType: 'json',
            success: function(response) {
                if(response.error) {
                    alert(response.error);
                } else {
                    console.log('消息撤回成功');
                    // 从本地记录中移除消息ID
                    messageIds.delete(messageId);
                    // 移除消息元素
                    $(e.target).closest('.chat-message').fadeOut(function() {
                        $(this).remove();
                    });
                }
            },
            error: function(xhr, status, error) {
                console.error('撤回失败:', error);
                console.error('服务器响应:', xhr.responseText);
                alert('撤回失败，请重试');
            }
        });
    });
});

// 添加解除踢出的处理函数
function unkickUser(username) {
    console.log('Unkicking user:', username);
    $.ajax({
        type: 'POST',
        url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=unkick",
        data: { username: username },
        dataType: 'json',
        success: function(response) {
            console.log('Unkick response:', response);
            if(response.error) {
                alert(response.error);
            } else {
                alert(response.message);
            }
        },
        error: function(xhr, status, error) {
            console.error('Unkick failed:', error);
            alert('操作失败，请重试');
        }
    });
}

// 在文件末尾添加图片查看器相关代码
$(document).ready(function() {
    // 图片点击放
    $(document).on('click', '.chat-message img:not(.rounded-circle)', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const imgSrc = $(this).attr('src');
        $('.image-viewer img').attr('src', imgSrc);
        $('.image-viewer').fadeIn();
    });

    // 点击背景关闭图片查看器
    $('.image-viewer').on('click', function() {
        $(this).fadeOut();
    });

    // 阻止图片点事件冒泡
    $('.image-viewer img').on('click', function(e) {
        e.stopPropagation();
    });

    // 添加粘贴图片功能
    $('#msg').on('paste', function(e) {
        const items = (e.clipboardData || e.originalEvent.clipboardData).items;
        
        for (let item of items) {
            if (item.type.indexOf('image') === 0) {
                e.preventDefault();
                
                const blob = item.getAsFile();
                const formData = new FormData();
                formData.append('image', blob);

                // 显示上传进度
                $('body').append(`
                    <div class="upload-progress" style="
                        position: fixed;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        background: rgba(0,0,0,0.8);
                        color: white;
                        padding: 20px;
                        border-radius: 5px;
                        z-index: 1000;
                    ">
                        <div>正在上传图片...</div>
                        <div class="progress-text">0%</div>
                    </div>
                `);

                $.ajax({
                    url: document.querySelector('.mk-chat-box').getAttribute('data-base-href') + "app/ajax.php?c=upload",
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    xhr: function() {
                        const xhr = new XMLHttpRequest();
                        xhr.upload.addEventListener("progress", function(e) {
                            if(e.lengthComputable) {
                                const percent = Math.round((e.loaded / e.total) * 100);
                                $('.progress-text').text(percent + '%');
                            }
                        });
                        return xhr;
                    },
                    success: function(response) {
                        $('.upload-progress').remove();
                        
                        if(response.error) {
                            alert(response.error);
                            return;
                        }
                        if(response.url) {
                            const imgMsg = `<img src="${response.url}" style="max-width:200px; max-height:200px; border-radius:5px; box-shadow:0 2px 5px rgba(0,0,0,0.2);" />`;
                            $("#msg").val(imgMsg);
                            send();
                        }
                    },
                    error: function(xhr, status, error) {
                        $('.upload-progress').remove();
                        console.error('Upload failed:', error);
                        alert('图片上传失败，请重试');
                    }
                });
            }
        }
    });
});

